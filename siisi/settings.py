"""
Django settings for siisiAi project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
import environ
from dotenv import load_dotenv
from pathlib import Path


# Load environment variables from .env file
load_dotenv()

# Initialize environment variables
env = environ.Env()
environ.Env.read_env()

# Define the BASE_DIR
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')


## To Reset Password For Developement
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# To Reset Password For Production 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = os.getenv('EMAIL_PORT', int)
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', bool)
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
#DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')


# To route traffic through OWASP ZAP for testing
PROXY = {
    'http': 'http://127.0.0.1:8080',
    'https': 'http://127.0.0.1:8080',
}


CSRF_TRUSTED_ORIGINS = [
    'https://siisi.copromanager.pro',
    'https://www.siisi.copromanager.pro'
]

# Set secure headers (Optional but recommended for production)
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

SESSION_COOKIE_SECURE = not os.getenv('DEBUG', default=True)
CSRF_COOKIE_SECURE = not os.getenv('DEBUG', default=True)
SECURE_SSL_REDIRECT = not os.getenv('DEBUG', default=True)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 900  # 15 minutes


# Allow all origins to access the API
# CORS_ALLOW_ALL_ORIGINS = True  # Not recommended for production

# Alternatively, you can specify allowed origins like this:
# CORS_ALLOWED_ORIGINS = [
#     'https://example.com',
#     'https://sub.example.com',
# ]

# Other CORS settings you might use
CORS_ALLOW_CREDENTIALS = True  # Allow cookies and HTTP authentication

# Credentials for Openai
OPENAI_API_KEY = api_key=os.getenv("OPENAI_API_KEY")

# reCAPTCHA settings for v2 and v3
RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY')

RECAPTCHA_REQUIRED_SCORE = 0.85  # For reCAPTCHA v3

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = [
    'siisi.copromanager.pro',
    'www.siisi.copromanager.pro',
    '142.93.235.205', '0.0.0.0', '192.168.31.182'
]

# Login URL for authentication redirects
LOGIN_URL = '/login/'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'base.apps.BaseConfig',

    'django_recaptcha',

    #'rest_framework',
    #'corsheaders',
]

AUTH_USER_MODEL = 'base.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'siisi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # Remove this if you are specifying custom loaders
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            # Ensure this section is properly configured
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'siisi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#DATABASES = {
#    'default': env.db('DATABASE_URL'),
#}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

# URL to access media files (user uploads)
#MEDIA_URL = '/media/'

# This is the directory where Django will collect static files during deployment.
#STATIC_ROOT = BASE_DIR / 'staticfiles'  # Create a 'staticfiles' directory in your project root for collected files.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Use whitenoise to serve static files in production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Directory for additional static files not in app directories
#STATICFILES_DIRS = [
#    BASE_DIR / 'static',  # This is for static files you want to use in development.
#]
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Ensure this is correct for development
]

# Media files (Uploaded by users)
MEDIA_URL = '/images/'

# Directory where user-uploaded media files will be stored
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# This is where uploaded media files will be stored.
MEDIA_ROOT = BASE_DIR / 'static/images'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
